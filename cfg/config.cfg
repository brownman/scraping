


unset commander
set -u
test -v dir_parent

export dir_script=$dir_parent/script
export dir_mp3=$dir_parent/MP3
export lang_base=EM
#export langs="JA AR"
export langs="'AR'  'RU'  'IT'"

#export langs="'RU'"
#min: 3


if [ $LOGNAME = 'someone1' ];then

export dir_bank=$dir_parent/BANK
else 
export   dir_bank=/tmp; #./BANK
fi

test -d $dir_bank || ( commander "mkdir -p $dir_bank" )



#
intro(){
echo dir_bank $dir_bank

echo "${langs[@]}"
}

trace () 
{ 
    local str="$@" 
    #{1:-}";
    echo -e "[-] $str" 1>&2;
}

commander(){
    local args=($@);
    local cmd="${args[@]}";
    local res;
    #use_many indicator print trace;
    trace  "[cmd] $cmd";
    eval "$cmd";
    res="$?";
    #indicator $res;
    return $res
}

random(){
    local num=$1
    let "r = $RANDOM % $num";
    return $r
}


string_change(){
    let "num=$1"
    local str_num=0
#1-100 lessons -> 3-102
    #  use print
    #    print func

    if [ $num -lt 10 ];then
        str_num="00$num"
    elif [ $num -lt 100 ] ;then
        str_num="0$num"
    else
        str_num=$num
    fi
    #echo 1>&2 str_num is $str_num
    echo "$str_num"

}



bake_url_str(){
    local lang_from=$1
    local lang_to=$2
    local num_lesson=$3

    local str_num=$( string_change $num_lesson )
    local filename_html="${lang_from}${lang_to}${str_num}.HTM"

    #expose_var filename_html

    local url="http://www.goethe-verlag.com/book2/${lang_from}/${lang_from}${lang_to}/${filename_html}"
    echo $url
}
bake_url_str_realmode(){
    
    bake_url_str $1 $2 "$( echo 2+$3)"
}


export -f random
export -f trace
export -f commander
export -f bake_url_str

export -f bake_url_str_realmode
export -f string_change
set +u
